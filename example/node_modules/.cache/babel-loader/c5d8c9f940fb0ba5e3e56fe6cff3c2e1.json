{"ast":null,"code":"import _slicedToArray from \"/Users/christian/Desktop/code/togglr-js/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useState, useEffect, useContext } from 'react';\nvar FeatureFlagContext = React.createContext([]);\n\nvar FeatureFlagProvider = function FeatureFlagProvider(_ref) {\n  var clientKey = _ref.clientKey,\n      children = _ref.children;\n\n  var _useState = useState({\n    flags: []\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      flagsRetrieved = _useState2[0],\n      setFlagsRetrieved = _useState2[1];\n\n  useEffect(function () {\n    setTimeout(function () {\n      setFlagsRetrieved({\n        flags: ['A', 'B', 'C']\n      });\n    }, 3000);\n  }, []);\n  return /*#__PURE__*/React.createElement(FeatureFlagContext.Provider, {\n    value: flagsRetrieved\n  }, children);\n};\n\nvar FeatureFlag = function FeatureFlag(_ref2) {\n  var _ref2$flagName = _ref2.flagName,\n      _flagName = _ref2$flagName === void 0 ? '' : _ref2$flagName,\n      children = _ref2.children;\n\n  var context = useContext(FeatureFlagContext);\n  if (!context.flags.includes(_flagName)) return null;\n  return children;\n};\n\nexport { FeatureFlag, FeatureFlagProvider };","map":{"version":3,"sources":["../src/index.js"],"names":["FeatureFlagContext","React","FeatureFlagProvider","children","useState","flags","useEffect","setTimeout","setFlagsRetrieved","flagsRetrieved","FeatureFlag","flagName","context","useContext"],"mappings":";;AAEA,IAAMA,kBAAkB,GAAGC,KAAK,CAALA,aAAAA,CAA3B,EAA2BA,CAA3B;;IAEaC,mBAAmB,GAAG,SAAtBA,mBAAsB,OAA6B;AAAA,MAA5B,SAA4B,QAA5B,SAA4B;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,kBAClBC,QAAQ,CAAC;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAD,CADU;AAAA;AAAA,MACxD,cADwD;AAAA,MACxD,iBADwD;;AAG9DC,EAAAA,SAAS,CAAC,YAAM;AACdC,IAAAA,UAAU,CAAC,YAAM;AACfC,MAAAA,iBAAiB,CAAC;AAAEH,QAAAA,KAAK,EAAE,CAAA,GAAA,EAAA,GAAA,EAAA,GAAA;AAAT,OAAD,CAAjBG;AADQ,KAAA,EAAVD,IAAU,CAAVA;AADO,GAAA,EAATD,EAAS,CAATA;AAMA,SAAA,aACE,KAAA,CAAA,aAAA,CAAC,kBAAD,CAAA,QAAA,EAAA;AAA6B,IAAA,KAAK,EAAEG;AAApC,GAAA,EADF,QACE,CADF;AAKD,C;;IAEYC,WAAW,GAAG,SAAdA,WAAc,QAAiC;AAAA,6BAA9BC,QAA8B;AAAA,MAA9BA,SAA8B,+BAAhC,EAAgC;AAAA,MAAfR,QAAe,SAAfA,QAAe;;AAC1D,MAAMS,OAAO,GAAGC,UAAU,CAA1B,kBAA0B,CAA1B;AACA,MAAI,CAACD,OAAO,CAAPA,KAAAA,CAAAA,QAAAA,CAAL,SAAKA,CAAL,EAAuC,OAAA,IAAA;AACvC,SAAA,QAAA;AACD,C","sourcesContent":["import React, { useEffect, useState, useContext } from 'react'\n\nconst FeatureFlagContext = React.createContext([])\n\nexport const FeatureFlagProvider = ({ clientKey, children }) => {\n  const [flagsRetrieved, setFlagsRetrieved] = useState({ flags: [] })\n\n  useEffect(() => {\n    setTimeout(() => {\n      setFlagsRetrieved({ flags: ['A', 'B', 'C'] })\n    }, 3000)\n  }, [])\n\n  return (\n    <FeatureFlagContext.Provider value={flagsRetrieved}>\n      {children}\n    </FeatureFlagContext.Provider>\n  )\n}\n\nexport const FeatureFlag = ({ flagName = '', children }) => {\n  const context = useContext(FeatureFlagContext)\n  if (!context.flags.includes(flagName)) return null\n  return children\n}\n"]},"metadata":{},"sourceType":"module"}