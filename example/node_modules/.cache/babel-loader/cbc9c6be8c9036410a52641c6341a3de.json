{"ast":null,"code":"import _toConsumableArray from \"/Users/christian/Desktop/code/togglr-js/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/christian/Desktop/code/togglr-js/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport firebase from 'firebase';\nvar database;\nvar firebaseConfig = {\n  apiKey: 'AIzaSyB0pXi3EBdc9p33uQvDMQG6SeCeuzpcHDk',\n  authDomain: 'react-togglr.firebaseapp.com',\n  databaseURL: 'https://react-togglr.firebaseio.com',\n  projectId: 'react-togglr',\n  storageBucket: 'react-togglr.appspot.com',\n  messagingSenderId: '883468833586',\n  appId: '1:883468833586:web:cf53cab617302ab2f87d2b',\n  measurementId: 'G-NHR0E20SST'\n};\ndatabase = firebase.initializeApp(firebaseConfig);\nfirebase.analytics();\nvar database$1 = database;\nvar FeatureFlagContext = React.createContext([]);\n\nvar FeatureFlagProvider = function FeatureFlagProvider(_ref) {\n  var clientKey = _ref.clientKey,\n      environment = _ref.environment,\n      children = _ref.children;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      flagsRetrieved = _useState2[0],\n      setFlagsRetrieved = _useState2[1];\n\n  useEffect(function () {\n    if (!clientKey) {\n      console.error('togglr-js configiration error: No clientKey set');\n      return;\n    }\n\n    var clientFlags = database$1.database().ref(\"clients/\".concat(clientKey, \"/flags\"));\n    clientFlags.on('value', function (snapshot) {\n      var flags = snapshot.val();\n      console.log('flags', flags);\n      setFlagsRetrieved(_toConsumableArray(flags));\n    });\n  }, []);\n  var FLAG_CONTEXT_DATA = {\n    environment,\n    flags: flagsRetrieved\n  };\n  return /*#__PURE__*/React.createElement(FeatureFlagContext.Provider, {\n    value: FLAG_CONTEXT_DATA\n  }, children);\n};\n\nvar FeatureFlag = function FeatureFlag(_ref2) {\n  var _ref2$flagName = _ref2.flagName,\n      _flagName = _ref2$flagName === void 0 ? '' : _ref2$flagName,\n      children = _ref2.children;\n\n  var context = useContext(FeatureFlagContext);\n  if (!context.flags.includes(_flagName)) return null;\n  return children;\n};\n\nexport { FeatureFlag, FeatureFlagProvider };","map":{"version":3,"sources":["../src/database.js","../src/index.js"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","firebase","FeatureFlagContext","React","FeatureFlagProvider","children","useState","useEffect","console","clientFlags","snapshot","flags","setFlagsRetrieved","FLAG_CONTEXT_DATA","flagsRetrieved","FeatureFlag","flagName","context","useContext"],"mappings":";;;;AAEA,IAAA,QAAA;AAEA,IAAIA,cAAc,GAAG;AACnBC,EAAAA,MAAM,EADa,yCAAA;AAEnBC,EAAAA,UAAU,EAFS,8BAAA;AAGnBC,EAAAA,WAAW,EAHQ,qCAAA;AAInBC,EAAAA,SAAS,EAJU,cAAA;AAKnBC,EAAAA,aAAa,EALM,0BAAA;AAMnBC,EAAAA,iBAAiB,EANE,cAAA;AAOnBC,EAAAA,KAAK,EAPc,2CAAA;AAQnBC,EAAAA,aAAa,EAAE;AARI,CAArB;AAWAC,QAAQ,GAAGC,QAAQ,CAARA,aAAAA,CAAXD,cAAWC,CAAXD;AACAC,QAAQ,CAARA,SAAAA;AAEA,IAAA,UAAA,GAAA,QAAA;ACdA,IAAMC,kBAAkB,GAAGC,KAAK,CAALA,aAAAA,CAA3B,EAA2BA,CAA3B;;AAEA,IAAaC,mBAAmB,GAAG,SAAtBA,mBAAsB,OAA0C;AAAA,MAAzC,SAAyC,QAAzC,SAAyC;AAAA,MAAzC,WAAyC,QAAzC,WAAyC;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,kBAC/BC,QAAQ,CAApD,EAAoD,CADuB;AAAA;AAAA,MACrE,cADqE;AAAA,MACrE,iBADqE;;AAG3EC,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAAJ,SAAA,EAAgB;AACdC,MAAAA,OAAO,CAAPA,KAAAA,CAAAA,iDAAAA;AACA;AACD;;AAED,QAAMC,WAAW,GAAGT,UAAQ,CAARA,QAAAA,GAAAA,GAAAA,mBAApB,SAAoBA,YAApB;AAEAS,IAAAA,WAAW,CAAXA,EAAAA,CAAAA,OAAAA,EAAyBC,UAAAA,QAAD,EAAc;AACpC,UAAMC,KAAK,GAAGD,QAAQ,CAAtB,GAAcA,EAAd;AACAF,MAAAA,OAAO,CAAPA,GAAAA,CAAAA,OAAAA,EAAAA,KAAAA;AACAI,MAAAA,iBAAiB,oBAAjBA,KAAiB,EAAjBA;AAHFH,KAAAA;AARO,GAAA,EAATF,EAAS,CAATA;AAeA,MAAMM,iBAAiB,GAAG;AAAA,IAAA,WAAA;AAExBF,IAAAA,KAAK,EAAEG;AAFiB,GAA1B;AAKA,SAAA,aACE,KAAA,CAAA,aAAA,CAAC,kBAAD,CAAA,QAAA,EAAA;AAA6B,IAAA,KAAK,EAAED;AAApC,GAAA,EADF,QACE,CADF;AAvBK,CAAP;;AA8BA,IAAaE,WAAW,GAAG,SAAdA,WAAc,QAAiC;AAAA,6BAA9BC,QAA8B;AAAA,MAA9BA,SAA8B,+BAAhC,EAAgC;AAAA,MAAfX,QAAe,SAAfA,QAAe;;AAC1D,MAAMY,OAAO,GAAGC,UAAU,CAA1B,kBAA0B,CAA1B;AACA,MAAI,CAACD,OAAO,CAAPA,KAAAA,CAAAA,QAAAA,CAAL,SAAKA,CAAL,EAAuC,OAAA,IAAA;AACvC,SAAA,QAAA;AAHK,CAAP","sourcesContent":["import firebase from 'firebase'\n\nlet database // will contain current environment db config.\n\nvar firebaseConfig = {\n  apiKey: 'AIzaSyB0pXi3EBdc9p33uQvDMQG6SeCeuzpcHDk',\n  authDomain: 'react-togglr.firebaseapp.com',\n  databaseURL: 'https://react-togglr.firebaseio.com',\n  projectId: 'react-togglr',\n  storageBucket: 'react-togglr.appspot.com',\n  messagingSenderId: '883468833586',\n  appId: '1:883468833586:web:cf53cab617302ab2f87d2b',\n  measurementId: 'G-NHR0E20SST'\n}\n\ndatabase = firebase.initializeApp(firebaseConfig)\nfirebase.analytics()\n\nexport default database\n","import React, { useEffect, useState, useContext } from 'react'\n\nimport database from './database'\n\nconst FeatureFlagContext = React.createContext([])\n\nexport const FeatureFlagProvider = ({ clientKey, environment, children }) => {\n  const [flagsRetrieved, setFlagsRetrieved] = useState([])\n\n  useEffect(() => {\n    if (!clientKey) {\n      console.error('togglr-js configiration error: No clientKey set')\n      return\n    }\n\n    const clientFlags = database.database().ref(`clients/${clientKey}/flags`)\n\n    clientFlags.on('value', (snapshot) => {\n      const flags = snapshot.val()\n      console.log('flags', flags)\n      setFlagsRetrieved([...flags])\n    })\n  }, [])\n\n  const FLAG_CONTEXT_DATA = {\n    environment,\n    flags: flagsRetrieved\n  }\n\n  return (\n    <FeatureFlagContext.Provider value={FLAG_CONTEXT_DATA}>\n      {children}\n    </FeatureFlagContext.Provider>\n  )\n}\n\nexport const FeatureFlag = ({ flagName = '', children }) => {\n  const context = useContext(FeatureFlagContext)\n  if (!context.flags.includes(flagName)) return null\n  return children\n}\n"]},"metadata":{},"sourceType":"module"}